-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.account
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255)[] NOT NULL,
    password character varying(255)[],
    name character varying(128)[],
    special boolean,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.client
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(128)[],
    profile_address character varying(255)[],
    assigned_account bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.message
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    account_fk bigint NOT NULL,
    client_fk bigint NOT NULL,
    text text[],
    date date NOT NULL,
    "time" time without time zone NOT NULL,
    sent_by_client boolean NOT NULL,
    read boolean,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.account_client
(
    account_fk bigint NOT NULL,
    client_fk bigint NOT NULL,
    invite_accepted boolean,
    status_changed_date timestamp without time zone,
    notify boolean,
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    status_system_fk bigint,
    status_user_fk bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.status_system
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    status text,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.status_system
    IS '    public struct Status
    {
        public const string
        Error = "Newly added",
        NotFriends = "Not friends",
        InviteSent = "Invite sent",
        InviteAccepted = "Invite accepted",
        InitialMessageSent = "Initial message sent",
        FollowupSent = "Followup sent",
        ContactFailed = "Contact failed",
        ManualContact = "Manual contact";
    }INSERT INTO public.status_system(status) VALUES (''Newly added'');
INSERT INTO public.status_system(status) VALUES (''Not friends'');
INSERT INTO public.status_system(status) VALUES (''Invite sent'');
INSERT INTO public.status_system(status) VALUES (''Invite accepted'');
INSERT INTO public.status_system(status) VALUES (''Initial message sent'');
INSERT INTO public.status_system(status) VALUES (''Followup sent'');
INSERT INTO public.status_system(status) VALUES (''Contact failed'');
INSERT INTO public.status_system(status) VALUES (''Manual contact'');';

CREATE TABLE IF NOT EXISTS public.status_user
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    status text,
    PRIMARY KEY (id)
);

ALTER TABLE public.message
    ADD FOREIGN KEY (client_fk)
    REFERENCES public.client (id)
    NOT VALID;


ALTER TABLE public.message
    ADD FOREIGN KEY (account_fk)
    REFERENCES public.account (id)
    NOT VALID;


ALTER TABLE public.account_client
    ADD FOREIGN KEY (account_fk)
    REFERENCES public.account (id)
    NOT VALID;


ALTER TABLE public.account_client
    ADD FOREIGN KEY (client_fk)
    REFERENCES public.client (id)
    NOT VALID;


ALTER TABLE public.account_client
    ADD FOREIGN KEY (status_system_fk)
    REFERENCES public.status_system (id)
    NOT VALID;


ALTER TABLE public.account_client
    ADD FOREIGN KEY (status_user_fk)
    REFERENCES public.status_user (id)
    NOT VALID;

END;

INSERT INTO public.status_system(status) VALUES ('Newly added');
INSERT INTO public.status_system(status) VALUES ('Not friends');
INSERT INTO public.status_system(status) VALUES ('Invite sent');
INSERT INTO public.status_system(status) VALUES ('Invite accepted');
INSERT INTO public.status_system(status) VALUES ('Initial message sent');
INSERT INTO public.status_system(status) VALUES ('Followup sent');
INSERT INTO public.status_system(status) VALUES ('Contact failed');
INSERT INTO public.status_system(status) VALUES ('Manual contact');